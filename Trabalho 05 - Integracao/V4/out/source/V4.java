/* autogenerated by Processing revision 1286 on 2022-11-11 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class V4 extends PApplet {

//declaração os usos da classe nova (pra alocar as variáveis delas)
Bola[] bolas = new Bola[1000];
float varAccel = (2);
int accelFormula = 1;

float tam_tela_min;
float diagonal_tela;
int backgroundx;
boolean switch_bg;


int main_color = color(255, 255, 255);
int gradA_color = color(255, 255, 255);
int gradB_color = color(255, 0, 0);

 public void setup() {
    //size(500,400,P2D);
    /* size commented out by preprocessor */;
    
    diagonal_tela = dist(0,0,width,height);
    tam_tela_min = min(width,height);
    backgroundx=0;
    
    //criação do objeto
    if (accelFormula==1) {
        for (int i = 0; i < bolas.length; ++i) {
        bolas[i] = new Bola((1/(sq(varAccel)))/(i+1));
    }    
    }
    
    
    noCursor();
    noStroke();
}

 public void draw() {

    planodefundo();
    bolamouse();
    bolasseguirem();

        //println(bolas[2].variacao_size);
}


class Bola{
    //variáveis declaradas
    float accel, diameter;
    float x, y, dx, dy, targetx, targety, distancia_mouse, variacao_cor, variacao_size;

//constructors
    Bola(float tempAccel){
        //conversão da variável de argumento (temporária) para uma variável de fato (inicializando ela)
        accel = tempAccel;
        diameter = tam_tela_min/8;
    }

    Bola(float tempAccel,float tempDiameter){
        //conversão da variável de argumento (temporária) para uma variável de fato (inicializando ela)
        accel = tempAccel;
        diameter = tempDiameter;
    }
    

//Functions

     public void update(){

        //inicializando e usando as variáveis
        
        targetx = mouseX; targety = mouseY;
        dx = targetx - x; dy = targety - y;
        
        //calculando a distancia linear da bola ate o mouse
        distancia_mouse = dist(mouseX,mouseY,x,y);
        
        //calculando a posicao da bola
        if (distancia_mouse>=0.5f){
            x += dx * accel; y += dy * accel;
            //criando uma variacao de valores de 0 para 1 baseado na distancia e tamanho da tela
            variacao_cor = distancia_mouse/(tam_tela_min/2);
        } else {
            x = mouseX; y = mouseY;
            variacao_cor = distancia_mouse/tam_tela_min;
        }

        variacao_size = distancia_mouse/diagonal_tela;
        
        //noFill();
        fill(lerpColor(gradA_color, gradB_color, variacao_cor));

        //usando as variáveis
        ellipse(x, y, diameter*(1-variacao_size), diameter*(1-variacao_size));
    }
}
 public void planodefundo(){
    //Planos de fundo
        //plano de fundo variável
            if(switch_bg==true){backgroundx++;}else{ backgroundx--;}
            if(backgroundx<=0){ switch_bg = true;}
            if(backgroundx>=255){ switch_bg = false;}

            //println(switch_bg+" | "+backgroundx); //debug cor fundo
            //background(backgroundx,backgroundx,255-backgroundx);
        
        //plano de fundo simples
            background(128);


}

 public void bolasseguirem(){
    //bolas que seguem    
         for (int i = 0; i < bolas.length; ++i) {
        bolas[i].update();
    }
}

 public void bolamouse(){
    //bola mouse
        fill(main_color);
        ellipse(mouseX, mouseY, bolas[0].diameter*(1-bolas[0].variacao_size), bolas[0].diameter*(1-bolas[0].variacao_size));
}


  public void settings() { fullScreen(P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "V4" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
