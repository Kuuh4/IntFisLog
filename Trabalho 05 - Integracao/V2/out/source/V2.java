/* autogenerated by Processing revision 1286 on 2022-11-10 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class V2 extends PApplet {

//última versão não instanciada

float x;
float y;
float arrancada = 0.05f;
int a = color(255, 255, 255);
int ba = color(0, 255, 255);
int be = color(255, 255, 0);

// quando for trocar de mouse pra outra coisa, criar duas variáveis p/ mouseX e mouseY, pra depois trocar pelos sensores.

 public void setup() {
  //fullScreen();
  /* size commented out by preprocessor */;
  noStroke();  
  noCursor();
  
}


 public void draw() { 
  background(51);
  
    //declarações p/ tracking
    float targetX = mouseX;
    float dx = targetX - x;
    float targetY = mouseY;
    float dy = targetY - y;
    

    // Calor da cor baseado na proximidade da bolaMouse
    float tam_tela_min = min(width,height);
    float distancia_mouse = dist(mouseX, mouseY, x, y);
    float variacao_cor = distancia_mouse/tam_tela_min;
   
    //continuação tracking. If para reduzir necessidade de calculo quando em standby.
    if (distancia_mouse<=0.5f) {
      x = mouseX;
      y = mouseY;
      
    } else {
      x += dx * arrancada;
      y += dy * arrancada;
      
    }
    

    int b = lerpColor(ba, be,variacao_cor);

    fill(b);
    ellipse(mouseX,mouseY,20,20);
    fill(a);
    ellipse(x,y,20,20);
    ellipse(x,0,20,20);
    ellipse(0,y,20,20);
    ellipse(x,height,20,20);
    ellipse(width,y,20,20);
  
 
  /*
  //Tradução Simples: 
  x = x + ((mouseX-x)*0.05);
  y = y + ((mouseY-y)*0.05);
  println("x: "+x+" | "+"y: "+y);
  */
  


  println(variacao_cor);
  
}
//colocar todos os elementos necessários para uma bola

class Bola {
  float x, y;
  float arrancada = 0.05f;

  float targetX = mouseX;
    float dx = targetX - x;
  float targetY = mouseY;
    float dy = targetY - y;

  float distancia_mouse = dist(mouseX, mouseY, x, y);


  if (distancia_mouse<= 0.5){
    x = mouseX;
    y = mouseY;
  } else {
    x += dx * arrancada;
    y += dy * arrancada;
  }

  ellipse(x, y, 20, 20);
}
float x, y, arrancada;
int a = color(255, 255, 255);
int ba = color(0, 255, 255);
int be = color(255, 255, 0);

// quando for trocar de mouse pra outra coisa, criar duas variáveis p/ mouseX e mouseY, pra depois trocar pelos sensores.

 public void setup() {
  //fullScreen();
  /* size commented out by preprocessor */;
  noStroke();  
  noCursor();
  
}


 public void draw() { 
  background(51);

    //declarações p/ tracking
    float targetX = mouseX;
    float dx = targetX - x;
    float targetY = mouseY;
    float dy = targetY - y;
    

    // Calor da cor baseado na proximidade da bolaMouse
    float tam_tela_min = min(width,height);
    float distancia_mouse = dist(mouseX, mouseY, x, y);
    float variacao_cor = distancia_mouse/tam_tela_min;
       

    int b = lerpColor(ba, be,variacao_cor);

    fill(b);
    ellipse(mouseX,mouseY,20,20);
    fill(a);
    ellipse(x,y,20,20);
    ellipse(x,0,20,20);
    ellipse(0,y,20,20);
    ellipse(x,height,20,20);
    ellipse(width,y,20,20);
  
 
  /*
  //Tradução Simples: 
  x = x + ((mouseX-x)*0.05);
  y = y + ((mouseY-y)*0.05);
  println("x: "+x+" | "+"y: "+y);
  */
  


  println(variacao_cor);
  
}


  public void settings() { size(600, 600); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "V2" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
